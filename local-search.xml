<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Web06 WebGL</title>
    <link href="/03-05-web/Web06-WebGL/"/>
    <url>/03-05-web/Web06-WebGL/</url>
    
    <content type="html"><![CDATA[<h1>WebGL简介</h1><p>前面已经学习了OpenGL的部分内容，而OpenGL和OpenGL ES、WebGL都差不多。</p><p>参照教程<a href="https://webglfundamentals.org/%EF%BC%8C%E5%B0%86%E7%BD%91%E9%A1%B5%E6%BA%90%E7%A0%81%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0%EF%BC%8C%E6%B7%BB%E5%8A%A0%E5%BF%85%E8%A6%81%E7%9A%84%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E3%80%82%E7%94%B1%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%EF%BC%8C%E5%A6%82%E6%9E%9C%E7%9B%B4%E6%8E%A5%E5%8F%8C%E5%87%BBhtml%E5%8F%AF%E8%83%BD%E4%B8%8D%E4%BC%9A%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%EF%BC%8C%E5%9B%A0%E6%AD%A4%E9%9C%80%E8%A6%81%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82%E6%96%B0%E5%BB%BA%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%60run_server.bat%60%EF%BC%8C%E5%85%B6%E4%B8%AD%E8%BE%93%E5%85%A5">https://webglfundamentals.org/，将网页源码保存到本地，添加必要的资源文件。由于浏览器的安全策略，如果直接双击html可能不会正常显示，因此需要创建本地服务器。新建批处理文件`run_server.bat`，其中输入</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m http.server <span class="hljs-number">8000</span><br></code></pre></td></tr></table></figure><p>双击运行，即可创建简单的http服务器。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CPP01-STL-container</title>
    <link href="/02-01-cs_basics/CPP01-STL-container/"/>
    <url>/02-01-cs_basics/CPP01-STL-container/</url>
    
    <content type="html"><![CDATA[<h1>C++ 容器</h1><blockquote><p><a href="https://blog.csdn.net/dshycorz/article/details/131175284">C++学习记录———容器的简单整理_容器和数组-CSDN博客</a></p></blockquote><p>容器</p><ul><li>顺序容器<ul><li>元素之间是顺序关系,元素有固定的位置</li><li>Array数组，vector向量，list链表，queue队列</li></ul></li><li>关联容器<ul><li>元素之间没有严格物理上的顺序关系。内部是有联系的</li><li>map 键值对 ，mulitmap 多重键值对</li></ul></li></ul><p>迭代器</p><p>迭代器是对“遍历容器”这一操作进行的封装。</p><p>为什么用迭代器而不用指针：迭代器的功能比指针更强大。指针只能遍历连续存储的数据结构，而迭代器还可以遍历链表、树等。</p>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>STL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Game04-PVZ</title>
    <link href="/03-03-game/Game04-PVZ/"/>
    <url>/03-03-game/Game04-PVZ/</url>
    
    <content type="html"><![CDATA[<p>搜索<code>植物大战僵尸API</code>关键词</p><p>一种开发工具是cheat engine。它可以抓取内存某个变量的变化。</p><blockquote><p><a href="https://www.bilibili.com/video/BV1nR4y1u7PZ/">https://www.bilibili.com/video/BV1nR4y1u7PZ/</a></p></blockquote><p>两种修改技术：数据修改、指令修改</p><p>操作流程：</p><ol><li>寻找数据位置(筛选)</li></ol><p>[博客内容转移至本地-知识和感悟]</p>]]></content>
    
    
    <categories>
      
      <category>Game Development</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Game Development</tag>
      
      <tag>PVZ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Game03 VR Research</title>
    <link href="/03-03-game/Game03-VR-research/"/>
    <url>/03-03-game/Game03-VR-research/</url>
    
    <content type="html"><![CDATA[<p>对开发者的建议<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.zhihu.com/question/514844705/answer/2357202142">[2]</span></a></sup><br>如果在大公司或能拿到投资，跟着公司和投资走。<br>如果全职开发，只能勉强过日子；如果是副业，可以过得很香。</p><h1>VR游戏开发简介</h1><h2 id="XR">XR</h2><p>Unity做VR全平台游戏开发（五）——认识UnityXR与OpenXR<br><a href="https://zhuanlan.zhihu.com/p/609218188">https://zhuanlan.zhihu.com/p/609218188</a></p><h2 id="引擎">引擎</h2><ul><li>Unity<ul><li>VR生态和教程更多，苹果的官方合作伙伴<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.zhihu.com/question/576465731/answer/3190854055">[1]</span></a></sup></li><li>开发速度快，性能好</li></ul></li><li>Unreal<ul><li>画面表现更好</li></ul></li></ul><h2 id="整体评价">整体评价</h2><ul><li>VR的实时渲染应用(例如游戏)对性能的要求远超传统游戏<ul><li>分辨率高(至少4K)</li><li>刷新率高(100Hz)</li><li>双镜头渲染(两倍性能要求)</li></ul></li><li>因此目前高品质游戏(像Alyx)还是电脑渲染、串流游玩，而不是一体机上游玩</li></ul><h2 id="资产制作">资产制作</h2><ul><li>包括<ul><li>平面设计</li><li>三维模型</li><li>音乐、音效</li><li>动画、特效</li></ul></li><li>对独立开发者而言，难度很大，可以直接使用Unity的案例资产</li></ul><h2 id="案例">案例</h2><ul><li><a href="https://www.zhihu.com/zvideo/1504501604837896192">VR文化展馆</a><ul><li>使用UE4.27开发</li></ul></li><li>切方块游戏 <a href="https://www.zhihu.com/question/514844705/answer/2357202142">https://www.zhihu.com/question/514844705/answer/2357202142</a><ul><li>在pico平台销量过万</li><li></li></ul></li></ul><h1>VR游戏开发(基于Pico, Unity)</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.zhihu.com/question/576465731/answer/3190854055">https://www.zhihu.com/question/576465731/answer/3190854055</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.zhihu.com/question/514844705/answer/2357202142">https://www.zhihu.com/question/514844705/answer/2357202142</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Game Development</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Game Development</tag>
      
      <tag>VR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Game02 游戏开发语言</title>
    <link href="/03-03-game/Game02-what-need-I-learn/"/>
    <url>/03-03-game/Game02-what-need-I-learn/</url>
    
    <content type="html"><![CDATA[<h1>游戏行业</h1><p>C++和Lua<br>要认清自己擅长什么、喜欢什么，既擅长又喜欢的工作，往往是最佳选择。<br>软件业人人都能学，因此更需要终身学习。<br>在校招方面，一般不会要求游戏开发经验，但是要语言基础狗，STL工具熟练掌握，思维灵活，对做游戏有热情。</p><h2 id="TA-technical-artist-技术美术">TA technical artist 技术美术</h2><p>解决艺术蓝图设计与实际技术执行之间的问题<br>是交叉岗位，需要大量的技术积淀，一般是由之前的艺术家或程序员转型而成。<br>是两边的润滑剂，做着沟通的活儿。技不如人，只能让别人去做。</p><h2 id="STL">STL</h2><p>Standard Template Library<br>是C++软件库，包含算法、容器、函数、迭代器四个部分。<br>迭代器是泛化的指针，开发者可以操作数据结构而不必关心其</p><h1>开发游戏示例</h1><p>C++：巫师3、黑暗之魂、上古卷轴5、PUBG、堡垒之夜<br>Java：Minecraft、Zomboid<br>C#：</p><ul><li>Unity<br>社区热度高、教学视频多<br>跨平台，一键导出<br>插件多，拓展性强<br>个人版免费：过去1年盈利不超过10万美元(每月5万人民币)<br>王者荣耀、原神、戴森球计划、坎巴拉太空计划、都市天际线、炉石传说、纪念碑谷</li></ul><h1>Java</h1><p>首先， 最重要差别是C++是用于系统编程，而Java主要用于应用编程。前者编译成本机的代码，直接运行在目标硬件与操作系统上运行，而后者编译为‘字节’码，运行在虚拟机之上。其次，Java是一种内存安全的语言，而C++并不是。C++中存在不安全的特性，未检查的强制转换，指针使用以及手动管理内存。这意味着C++比Java编程更加容易出错。再次，C++的设计决策优先考虑的是执行速度和低内存使用率，而Java的设计是为了简单性和程序开发的工作效率，并不是为了执行效率。经常听到一些声音，需要在二者做出选择：如果速度与内存使用是重要的因素，那么建议使用C++.如果学习曲线，也是开发者的生产力最重要的因素之一，那么就应该选择Java最后，还有一些差别：Java自动内存回收机制。Java不支持任何的结构Java不支持析构函数，如上所述，它很大程序是依赖着GC垃圾回收机制，所以无需析构函数来释放资源。</p><p>作者：Leon<br>链接：<a href="https://www.zhihu.com/question/477455484/answer/2308413468">https://www.zhihu.com/question/477455484/answer/2308413468</a></p><h1>Unity游戏开发</h1><blockquote><p>计算机系科协暑期培训：<a href="https://summer23.net9.org/">https://summer23.net9.org/</a></p></blockquote><p>能否将数据库用于数值计算？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Game01-MC plugin</title>
    <link href="/03-03-game/Game01-MC-Development/"/>
    <url>/03-03-game/Game01-MC-Development/</url>
    
    <content type="html"><![CDATA[<p>Zomboid联机</p><p>原先下载了Zomboid测试版，可是不开放联机。</p><blockquote><p>联机教程 ttps://www.bilibili.com/read/cv14427208/</p></blockquote><h1>MC Forge Mod 开发</h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/600691757">Minecraft Forge 1.18.2 Mod制作学习笔记 (1) Eclipse开发环境搭建 - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/dudujerry/p/17571070.html">【Minecraft Forge】从零开始学习1.20.1模组开发 （零）：配置开发环境 - dudujerry - 博客园 (cnblogs.com)</a></p><p><a href="https://www.bilibili.com/video/BV1oh4y177bB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=442f2278aa64b55da1a57120b4e10d88">Minecraft Forge Mod 开发入门教程 p0-开发环境搭建_哔哩哔哩_bilibili</a></p><p><a href="https://docs.minecraftforge.net/en/1.20.x/">Forge Documentation (minecraftforge.net)</a></p></blockquote><p>其中第3个链接是视频链接，有效，<strong>未完待续</strong></p><p>p9-数据生成 为什么失败？</p><p>看这个教程 文字版 <a href="https://www.bilibili.com/read/cv24404738/">我的世界Minecraft 1.19 Mod开发教程分享-04-增加合成表和方块破坏掉落物 - 哔哩哔哩 (bilibili.com)</a></p><p>最新教程 <a href="https://www.bilibili.com/read/cv25210400/?spm_id_from=333.999.0.0">我的世界·1.20.1·forge Mod教程·ep2·添加物品和添加创造物品栏 - 哔哩哔哩 (bilibili.com)</a></p><p>如何打包 <a href="https://www.bilibili.com/read/cv24332474/">https://www.bilibili.com/read/cv24332474/</a></p><p>报错：server mod list is not compatible，服务器模组列表不兼容。可能是因为调试模式下，examplemod也需要在服务器安装。</p><p>将forge服务器所有模组删除后，支持原版客户端登录。</p><h2 id="添加方块">添加方块</h2><p>blockbench网站 <a href="https://web.blockbench.net/">Blockbench</a></p><p>已成功生成自定义方块。</p><p>目前的问题：如何确定放置时方块的朝向？</p><p>item, block, blockitem。blockitem是用block自动生成的item。</p><p>使用了“复制模式”，即整个游戏中所有example_block共享一个example_block实例(地址也相同)，存储时只需存储每个block的状态。</p><p>官方库映射(反混淆)：参见<code>外部库/Gradle:net.minecraftforge:forge:1.20.1-47.2.0_mapped_official_1.20.1</code>，它实际上位于<code>C:\Users\tgl\.gradle\caches\forge_gradle\minecraft_user_repo\net\minecraftforge\forge\1.20.1-47.2.0_mapped_official_1.20.1</code>，jar文件用winRAR打开(或者在项目文件夹打开)，然后进入</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">\net\minecraft\world\item\<br></code></pre></td></tr></table></figure><h2 id="添加物品">添加物品</h2><p>物品逻辑能实现，但是材质不显示。经检查是json的“parent”的值写错了。</p><p>此外，primogems物品需要对着example_block右键使用，才能出现烤鱼。对着其他方块使用不行。</p><h2 id="事件监听">事件监听</h2><p>反编译代码位于</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">\net\minecraftforge\<span class="hljs-keyword">event</span>\<br></code></pre></td></tr></table></figure><p>事件分为Forge和Fml，后者包括游戏启动等等。</p><p>尽量使用Forge的事件，以免跟其他mod冲突。</p><p>注册类有3种方法，我推荐最后一种，因为单独放在一个类中</p><h2 id="Capability">Capability</h2><p>一开始没效果。</p><blockquote><p>经排查，是自己抄错了几处：</p><ul><li>感叹号抄错了，导致if判断刚好相反(原本是判断非空)</li><li>“farmxp&quot;抄成&quot;farxp”</li></ul></blockquote><p>这说明Java容错性很强，即使没注册成功，也不报错。</p><h2 id="注册命令-添加自己定义指令">注册命令(添加自己定义指令)</h2><p>在<code>ForgeEventListener</code>类中添加静态方法，用来在总线中注册命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerCommand</span><span class="hljs-params">(RegisterCommandsEvent event)</span><br>&#123;<br>    GetFarmXpCommand.register(event.getDispatcher());<br>&#125;<br></code></pre></td></tr></table></figure><p>注意其中的<code>GetFarmXpCommand.</code>是调用了类的静态方法，相当于C++中的<code>GetFarmXpCommand::</code>。使用前要import相应的类。</p><p>类中这样写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">register</span><span class="hljs-params">(CommandDispatcher&lt;CommandSourceStack&gt; dispatcher)</span>&#123;<br>    dispatcher.register(<br>            Commands.literal(<span class="hljs-string">&quot;farmxp&quot;</span>).executes(<br>                    (context)-&gt;&#123;<br>                        context.getSource().getPlayer().getCapability(PlayerFarmXpProvider.PLAYER_FARM_XP_CAPABILITY).ifPresent(<br>                            (xp)-&gt;&#123;<br>                                context.getSource().sendSuccess(<br>                                        ()-&gt; Component.literal(<span class="hljs-string">&quot;xp:&quot;</span>+xp.getXp()),<br>                                        <span class="hljs-literal">false</span><br>                                );<br>                            &#125;<br>                        );<br>                    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>                    &#125;<br>            )<br>    );<br>&#125;<br></code></pre></td></tr></table></figure><p>GPT的解释</p><blockquote><p>这段Java代码是用于注册自定义命令的一部分，属于Minecraft Forge模组的代码。它通过使用CommandDispatcher类来注册一个名为&quot;farmxp&quot;的命令。</p><p>使用<code>Commands.literal(&quot;farmxp&quot;)</code>来指定命令的名称为&quot;farmxp&quot;。然后使用<code>.executes()</code>方法来指定命令的执行逻辑，该方法接受一个Lambda表达式作为参数。</p><p>在Lambda表达式中，我们首先使用<code>context.getSource().getPlayer().getCapability(PlayerFarmXpProvider.PLAYER_FARM_XP_CAPABILITY)</code>来获取玩家的一个特定能力（capability），即PlayerFarmXpProvider.PLAYER_FARM_XP_CAPABILITY，玩家的农场经验。</p><p>接着，我们使用<code>.ifPresent()</code>方法来检查能力是否存在。如果存在，我们使用<code>context.getSource().sendSuccess()</code>方法将一条成功消息发送给命令的来源，即玩家。在这里，我们使用了一个Lambda表达式作为参数来动态构建这条消息。</p><p>消息的内容是&quot;xp:&quot;加上<code>xp.getXp()</code>的返回值，其中<code>xp</code>是获取到的能力实例，<code>.getXp()</code>是能力实例的一个方法。</p><p>最后，我们返回整数值0，表示命令执行成功。</p><p>这段代码的作用是注册一个自定义命令&quot;farmxp&quot;，当玩家输入该命令时，会获取玩家的农场经验并将其发送给玩家。</p></blockquote><h2 id="展示文本">展示文本</h2><p>Overlay可以展示信息，但是没有鼠标交互。</p><p>Container Gui</p><h2 id="计划">计划</h2><p>能否更改启动界面？增加原神界面。</p><p>计划更改为原神UI，添加元素反应系统、元素附着机制、元素视野。</p><h2 id="Forge官方文档解析">Forge官方文档解析</h2><h3 id="Getting-Started">Getting Started</h3><ul><li>mods.toml</li></ul><p><code>/src/main/resources/META-INF/mods.toml</code>，描述mod信息。例如mod名称、作者、描述、logo等。logo放在<code>/src/main/resources/</code>中。通配符<code>$&#123;&#125;</code>的内容参见<code>/gradle.properties</code>，</p><ul><li>版本号命名规范</li></ul><p>1.20.1-1.0.0.0</p><p>MCVersion-MajorMod.MajorAPI.Minor.Patch</p><h3 id="Core-Concepts">Core Concepts</h3><p>Registries</p><p>Sides</p><p>Physical client &amp; Physical server，指的是通常意义上的客户端和服务器。</p><p>Logical client &amp; Logical server：前者是Server Thread，负责运行游戏逻辑，包括实体生成、天气、物理等。后者是Render Thread，负责接受用户输入、传递到logical server，同时负责渲染界面。单人模式下同时存在这两个。</p><p>在修改游戏逻辑前，应检查是否在logical server中</p><h1>MC paper服务器插件开发</h1><blockquote><p>教程：<a href="https://docs.qq.com/doc/DWFZidkdic1RCdk13">插件开发教程目录在控制台打印文字：零基础paper端插件开发教程之一 (qq.com)</a></p><p>中文文档：<a href="https://bukkit.windit.net/javadoc/">概览 (Spigot-API 1.20-R0.1-SNAPSHOT API 中文文档) (windit.net)</a></p></blockquote><p>1.13：水生世界，寻宝时间，完整的海洋系统，海洋之心。此外，扁平化把指令几乎全改了</p><p>1.14：劫掠事件</p><p>1.15：蜜蜂</p><p>1.16：下界，猪灵蛮兵，炽足兽，下界合金。</p><p>1.16.5支持java8，</p><p>1.16.5/1.16.4只能正版登录。离线登录会被禁止多人游戏选项。但更高版本无此问题。</p><p>高版本无法进入低版本服务器，会显示“Outdated Server! It’s still on 1.12.2”</p><p>forge下载页面如果加载不出来，可以尝试代理。</p><p>forge客户端47.1.0，服务端47.2.0，但仍然可联机。</p><p>optifine与原神模组不兼容</p><p>安装光影：</p><blockquote><p><a href="https://minecrafthub.com/texture/arc-shader-for-minecraft-1-19-3">Arc Shader For Minecraft 1.20/1.20.2+ | Minecraft Texture | Minecraft Hub</a></p></blockquote><ol><li>Download a resource pack, you should get a .zip file</li><li>Open the folder to which you downloaded the file</li><li>Copy the .zip file</li><li>Open Minecraft</li><li>In Minecraft, click on “Options”, then “Resource Packs”</li><li>Choose “Open resource pack folder”</li><li>Paste the file into the resource folder in Minecraft</li><li>Go back to Minecraft, the resource pack should now be listed (if not listed then go to the main menu by pressing Esc and repeat step 5) and you can activate it by choosing it and hitting “Done”. The game will now reload itself.</li></ol><h2 id="插件和模组的区别">插件和模组的区别</h2><h3 id="插件">插件</h3><p>不创建新材质/GUI，只是修改原版物品数据来更改游戏内容。插件只需服务器安装。</p><p>优点是原版客户端都能登录。</p><h3 id="模组">模组</h3><p>有的需要服务器和客户端装，有的辅助类模组(例如背包整理)只需客户端装。</p><blockquote><p>1.12.2 Forge <a href="https://files.minecraftforge.net/net/minecraftforge/forge/index_1.12.2.html">Downloads for Minecraft Forge for Minecraft 1.12.2</a></p></blockquote><h2 id="Java基础语法">Java基础语法</h2><h3 id="对象">对象</h3><ul><li>字符串</li></ul><p>字符串是引用类型，其本质是对象，不是基本数据类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Hello world!&quot;</span>;<br></code></pre></td></tr></table></figure><p>字符串是不可变对象，无法修改。</p><p>数字转字符串</p><p>方法1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String.format(<span class="hljs-string">&quot; x=%.2f,y=%.2f,z=%.2f&quot;</span>,x,y,z);<br></code></pre></td></tr></table></figure><p>方法2：通过拼接操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Hello &quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> str + <span class="hljs-number">10</span>;<span class="hljs-comment">// &quot;Hello 10&quot;</span><br></code></pre></td></tr></table></figure><ul><li>对象</li></ul><p>对象是引用类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">World</span> <span class="hljs-variable">world</span> <span class="hljs-operator">=</span> Bukkit.getWorld(<span class="hljs-string">&quot;world&quot;</span>);<br></code></pre></td></tr></table></figure><p>world是引用，相当于指针。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Location</span> <span class="hljs-variable">location</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Location</span>(world,x,y,z);<br></code></pre></td></tr></table></figure><p>location是引用，但它指向一个新创建的Location变量。</p><h3 id="Lambda表达式">Lambda表达式</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/501465110">四万字 Lambda 表达式完整教程（强烈建议收藏） - 知乎 (zhihu.com)</a></p></blockquote><p>目的：提高编程效率</p><p>将函数作为另一个函数的参数。</p><p>基本语法</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-function"><span class="hljs-params">([形参列表])</span> -&gt;</span> &#123;Lambda体&#125;<br></code></pre></td></tr></table></figure><p>关注返回值和参数，方法名不重要。</p><p>使用<code>-&gt;</code>将参数和实现逻辑分离。</p><p>如果lambda体只有一行代码，则可以省略大括号。</p>]]></content>
    
    
    <categories>
      
      <category>Game Development</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Game Development</tag>
      
      <tag>MC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web05-LAN-connection</title>
    <link href="/03-05-web/Web06-LAN-connection/"/>
    <url>/03-05-web/Web06-LAN-connection/</url>
    
    <content type="html"><![CDATA[<h1>电脑局域网联机</h1><h2 id="测试能否ping通">测试能否ping通</h2><p>遇到的问题</p><ul><li>a能ping通b，b不能ping通a，显示“请求超时”<ul><li>考虑关闭a的防火墙：<a href="https://baijiahao.baidu.com/s?id=1764386911193359357">https://baijiahao.baidu.com/s?id=1764386911193359357</a></li></ul></li></ul><h2 id="测试示例网页">测试示例网页</h2><p>如果无法直接打开index.html，是因为浏览器的<strong>同源策略</strong>。同源策略隔离了不同类型的网页脚本，防止网页B通过js篡改网页A的内容，实现攻击。<br>例如，直接打开index.html，它属于本地文件系统。而</p><h3 id="vscode服务器">vscode服务器</h3><p>用vscode打开，点击右下角go live</p><h3 id="python服务器">python服务器</h3><ol><li><a href="http://xn--server-hn3jk46f.py">创建server.py</a>，写入以下代码，并运行</li></ol>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> http.server<br><span class="hljs-keyword">import</span> socketserver<br><br>PORT = <span class="hljs-number">8000</span><br><br>Handler = http.server.SimpleHTTPRequestHandler<br><br><span class="hljs-keyword">with</span> socketserver.TCPServer((<span class="hljs-string">&quot;&quot;</span>, PORT), Handler) <span class="hljs-keyword">as</span> httpd:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;server started, listening to port: &quot;</span>, PORT)<br>    httpd.serve_forever()<br></code></pre></td></tr></table></figure><ol start="2"><li>在终端输入python <a href="http://server.py">server.py</a>。此时在本地/另一台电脑就可以访问 <a href="http://10.0.1.119:8000">http://10.0.1.119:8000</a> 了</li><li>如果报错或者无法访问，请将代码中的中文改为英文</li></ol><h3 id="node-js服务器">node.js服务器</h3><blockquote><p>参见<a href="https://blog.csdn.net/qq_46032550/article/details/134694890">如何跑通跨窗口渲染：multipleWindow3dScene-CSDN博客</a></p></blockquote><h1>电脑与手机通信</h1><p>电脑可以访问某网页，手机也可以访问某网页，因此我认为它们的通信机制是类似的。</p><h2 id="Socket">Socket</h2><p>socket也称作“套接字”，描述了计算机的IP地址和端口，运行在计算机中的程序之间采用socket进行数据通信。通信的两端都有socket，它是一个通道，数据在两个socket之间进行传输。</p><p>socket把复杂的TCP/IP协议族隐藏在socket接口后面，对程序员来说，只要用好socket相关的函数，就可以完成数据通信。</p><h2 id="手机能否直接运行C-程序">手机能否直接运行C++程序</h2><ul><li><p>JNI<br>Java Native Interface<br>目的：将C/C++代码集成进Java程序中</p></li><li><p>NDK<br>Native Development Kit 是Android的工具开发包<br>目的：快速开发C/C++动态库，并自动将so和应用一起打包为APK</p></li></ul><ol><li>要实现电脑与手机之间的网络通信（局域网），你可以使用以下方法：<ul><li>通过无线局域网（Wi-Fi）：确保电脑和手机连接到同一个Wi-Fi网络，这样它们就可以在同一局域网中进行通信。</li><li>通过移动热点：将手机设置为移动热点，然后让电脑连接到手机的移动热点，这样它们也可以在同一局域网上进行通信。</li></ul></li></ol><p>在确保设备连接到同一局域网后，你可以使用各种方法进行通信，包括但不限于：</p><ul><li>文件共享：通过共享文件夹或使用云存储服务，在电脑和手机之间传输文件。</li><li>远程桌面连接：使用远程桌面软件，如Microsoft Remote Desktop或TeamViewer，从电脑远程控制手机或反之亦可。</li><li>消息传递：使用即时通讯应用程序（如WhatsApp、Telegram、微信等）或电子邮件，在电脑和手机之间发送消息。</li></ul><ol start="2"><li>电脑与电脑之间的通信和电脑与手机之间的通信有一些不同之处：<ul><li>硬件和操作系统：电脑和手机是不同类型的设备，它们具有不同的硬件和操作系统。因此，在实现通信时，可能需要使用不同的软件或协议来适应不同的设备类型。</li><li>屏幕尺寸和输入方式：手机的屏幕尺寸较小，而电脑的屏幕尺寸较大。这意味着在通信过程中，显示和输入信息的方式可能会有所不同。</li><li>功能和应用程序：手机通常具有更多的移动功能和应用程序，例如位置服务、相机等。而电脑则更适合进行复杂的计算和多任务处理。</li></ul></li></ol><p>尽管存在这些差异，但电脑和手机之间的通信仍然可以通过网络实现，并且可以使用各种方法进行数据传输和交流。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Rust01 What&#39;s Rust?</title>
    <link href="/03-07-rust/Rust01-What-s-rust/"/>
    <url>/03-07-rust/Rust01-What-s-rust/</url>
    
    <content type="html"><![CDATA[<p>Rust特点</p><ul><li>学习曲线较高<ul><li>编译器严格，难以编译通过，但一旦通过，debug少<ul><li>它从语法特性上禁止一切可能出现内存问题的操作</li><li>通过学习rust，能够写出更好的cpp代码</li></ul></li><li>使用RAII、模板、静态分发、元编程等新特性</li></ul></li></ul><p>Rust菜鸟教程</p><ul><li>Rust所有权<ul><li>无论是栈变量还是堆变量，超出作用域一律自动释放</li></ul></li><li>Rust并发编程<ul><li>安全高效地处理并发是Rust诞生的目的之一，主要解决服务器的高负载承受能力。</li><li>C/C++语言本身不具备侦察和避免并行错误的能力，因此开发者需要花费大量精力避免发生错误。</li><li>Rust将错误尽可能消灭在编译阶段。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>rust</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web05-php</title>
    <link href="/03-05-web/Web05-php/"/>
    <url>/03-05-web/Web05-php/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.runoob.com/php/php-tutorial.html">https://www.runoob.com/php/php-tutorial.html</a></p><p>既然PHP可以操纵服务器文件，那么“静态网站”也会被修改吗？</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web04 Customize Live2d</title>
    <link href="/03-05-web/Web04-Customize-Live2d/"/>
    <url>/03-05-web/Web04-Customize-Live2d/</url>
    
    <content type="html"><![CDATA[<h1>加入live2d</h1><p>live2d_api创作者信息</p><blockquote><p>B站空间：<a href="https://space.bilibili.com/3695903">FGHRSH的个人空间-FGHRSH个人主页-哔哩哔哩视频 (bilibili.com)</a></p><p>广州市聚德中学，2015届(2015年初中毕业)，比我大两岁。</p><p>广州城市职业学院(专科)，分数线400-</p></blockquote><h2 id="添加live2d">添加live2d</h2><ul><li>可以用别人的库<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>为了应用到全局，我在<code>themes/hexo-theme-material/layout/layout.ejs</code>文件中，添加如下代码：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/gh/OliveTIen/live2d-widget-web@latest/autoload.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>而且将路径修改为<strong>自己的</strong>仓库路径</li></ul><h2 id="第一个库">第一个库</h2><blockquote><p>参考资料： <a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a></p></blockquote><p>该库利用rollup.js打包，将<code>./src</code>中的文件打包成根目录下的<code>waifu-tips.js</code>，阅读时，可以直接阅读<code>./src</code>中的相应文件。</p><p>之前谈到，只需要在模板文件添加一行代码就可以实现live2d。该代码加载了<code>autoload.js</code> 。</p><p><code>autoload.js</code>做了两件事:</p><ol><li>加载同目录下的<code>waifu.css``live2d.min.js``waifu-tips.js</code>。</li><li>加载完成后，调用<code>waifu-tips.js</code>中的<code>initWidget</code>函数(由于受rollup.js打包的影响，函数名可能发生改变/不便阅读，原函数名可以在<code>./src/index.js</code>中找到)</li><li><code>initWidget</code>函数将参数<code>config, apiPath</code>传递给<code>loadWidget</code>函数，<code>loadWidget</code>函数新建一个<code>Model</code>(详见index.js第6行)<ul><li>Model的定义参见<code>/model.js/</code>，里面定义了加载模型的方法</li><li><code>loadModelList()</code>函数加载了<code>apiPath(即live2D_API仓库根目录)</code>中的<code>model_list.json</code>。<code>model_list.json</code>定义了要加载的模型列表</li></ul></li></ol><p>Model</p><blockquote><p>Genshin live2d model: [Free 2 Use <a href="https://www.hoyolab.com/article/998327">Live2D Vtuber] Bennett From Genshin Impact 原神 | HoYoLAB</a></p></blockquote><ul><li>waifu-tips.json<ul><li>定义事件响应(回复词)<ul><li>鼠标hover click</li><li>日期时间</li><li>其他</li></ul></li></ul></li><li>src/model.js<ul><li>在该文件中找到了代码<code>$&#123;this.cdnPath&#125;model_list.json</code>，从而知道了api来源。其中cdnPath为api路径，例如<a href="https://github.com/fghrsh/live2d_api/">https://github.com/fghrsh/live2d_api/</a></li><li>我将api clone到本地，并修改api路径为<strong>自己的</strong>仓库路径</li><li>该文件的<code>loadModel</code>函数调用了<code>loadlive2d</code>函数，该函数读取<code>cdnPath</code>的目标模型文件夹的<code>index.json</code></li><li>试图搜索<code>loadlive2d</code>函数，<ul><li>live2d_widget_web有：<ul><li>login.html</li><li>model.js(3处)</li></ul></li><li>live2d_api未发现其来源。</li><li>但是在github上找到其他项目<code>Live2dOnWeb</code><ul><li><code>src\SDKv2\mainV2.js</code>中发现定义</li></ul></li></ul></li></ul></li></ul><h2 id="添加自定义模型">添加自定义模型</h2><blockquote><p>第2个库：</p><p>Hexo添加自定义文件：<a href="https://blog.leonus.cn/2022/custom.html">Hexo博客添加自定义css和js文件 | Leonus</a></p></blockquote><p>我想加载自定义模型，可是上面的方式无法加载moc格式(旧版本)模型。因此我又找到一个仓库<code>Live2dOnWeb</code>，它的优点有</p><ul><li>可加载moc或moc3格式模型</li><li>将模型包和api统一，不必像上一个项目一样，反复调用</li></ul><p>我尝试将文件直接放进hexo的source目录，可是没有显示。</p><p>看来只能调用其他库了。</p><p>我先在Live2dOnWeb加一个<code>autoload.js</code>，然后用类似的调用js代码的方式</p><p><strong>未完待续</strong></p><p>先分析</p><h2 id="Web知识总结">Web知识总结</h2><h3 id="rollup-js打包">rollup.js打包</h3><p>第一个库之所以难读，是因为它将<code>./src</code>中的文件打包成根目录下的<code>waifu-tips.js</code></p><h3 id="同源与跨域">同源与跨域</h3><blockquote><p>参考资料：</p><ul><li>跨域：<a href="https://blog.csdn.net/my_web012/article/details/104834284">https://blog.csdn.net/my_web012/article/details/104834284</a></li></ul></blockquote><p>同源：协议、域名、端口都相同。</p><p>浏览器的同源策略：只有同源的文件才能互相访问，以保证安全性。这就是为什么有时候本地调试时，直接打开<code>index.html</code>显示空白。</p><p>跨域，就是用一个域下的文档请求另一个域下的资源文档。</p><p>Promise异步加载资源，<code>appendChild(tag)</code>动态加载元素</p><p>加载js资源，通过并行加快速度，同时保证在完全加载js脚本后才能执行下一步，这就是Promise的作用。</p><h3 id="JavaScript异步编程">JavaScript异步编程</h3><blockquote><p>参考资料：<a href="https://www.runoob.com/js/js-async.html">JavaScript 异步编程 | 菜鸟教程 (runoob.com)</a></p></blockquote><p>回调函数：</p><p>setTimeout是异步的。</p><h3 id="Promise">Promise</h3><blockquote><p>参考资料：<a href="https://www.runoob.com/js/js-promise.html">JavaScript Promise | 菜鸟教程 (runoob.com)</a></p></blockquote><p>Javascript是单线程语言，若资源过大，加载过慢，会让人感觉阻塞。</p><p>Promise 是一个 ECMAScript 6 提供的类，目的是更加优雅地书写复杂的异步任务。</p><p>当 Promise 被构造时，起始函数会被同步执行</p><p>Promise 对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）、rejected（已失败）</p><h3 id="CDN-降低加载延迟">CDN - 降低加载延迟</h3><blockquote><p>参考资料：<a href="https://zhuanlan.zhihu.com/p/28940451">https://zhuanlan.zhihu.com/p/28940451</a></p></blockquote><p>加载live2d时用到了CDN。感谢CDN网站 <a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a> 对我项目的加速支持。</p><p>CDN(Content Delivery Network)，内容分发网络，用来解决因分布、带宽、服务器性能带来的网络延迟问题。</p><ul><li>架构(以最简单的CDN网络为例)<ul><li>由一个DNS服务器和几台缓存服务器组成</li><li>用户点击URL，经过本地DNS系统解析，将域名的解析权交给CDN专用DNS服务器</li><li>CDN将全局负载均衡设备IP地址返回用户</li></ul></li><li>服务模式<br>分布式存储、负载均衡、网络请求的重定向、内容管理<br>核心要件：内容管理、全局流量管理</li><li>特点<ul><li>本地Cache加速，提高大量图片和静态页面的访问速度</li><li>镜像服务</li><li>远程加速</li><li>带宽优化</li><li>集群抗攻击</li></ul></li><li>应用<br>网站、直播、视频平台</li><li>示例<br><a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a> 对开源免费</li></ul><h3 id="Cookie-Session-Token">Cookie, Session, Token</h3><blockquote><p>参考资料：<a href="https://zhuanlan.zhihu.com/p/625995458?utm_id=0">https://zhuanlan.zhihu.com/p/625995458?utm_id=0</a></p></blockquote><p>HTTP协议是无状态的，下一次请求与上一次请求无关系。</p><p>如何判断两次请求是同一个人？因此需要在客户端做标识。</p><table><thead><tr><th>方式</th><th>Cookie</th><th>Session</th><th>Token</th></tr></thead><tbody><tr><td>存储位置</td><td>客户端</td><td>服务端</td><td>自由操作</td></tr><tr><td>存储大小</td><td></td><td></td><td></td></tr><tr><td>优点</td><td>兼容性好</td><td></td><td></td></tr><tr><td>缺点</td><td>跨域不便</td><td></td><td></td></tr><tr><td>安全性</td><td>低</td><td></td><td>高</td></tr><tr><td>响应速度</td><td></td><td>快</td><td>慢</td></tr></tbody></table><p>Cookie存储在客户端，不够安全。</p><p>Session耗费服务器资源。通常与Cookie结合使用。</p><p>Token每次只存了用户id，然后查询数据库。由于只存id，内容存在服务端，因此安全性高，且不耗费服务器内存。由于需要查询服务端的数据库，因此响应慢。</p><p>Session以空间换时间，Token以时间换空间</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>UI</tag>
      
      <tag>live2d</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web03-UI</title>
    <link href="/03-05-web/Web03-UI/"/>
    <url>/03-05-web/Web03-UI/</url>
    
    <content type="html"><![CDATA[<h1>前端开发调研</h1><p>以前用Qt开发界面，主要问题是不能很好适配不同屏幕缩放比例。<br>Qt解决缩放问题：<br><a href="https://www.zhihu.com/question/451021591/answer/1896642195">https://www.zhihu.com/question/451021591/answer/1896642195</a></p><p>微信有一个WebUI库</p><h2 id="Electron">Electron</h2><ul><li>示例<ul><li>vs code</li><li><a href="http://draw.io">draw.io</a></li><li>Xmind</li></ul></li><li>优势</li><li>不足<ul><li>对硬件有要求。无法做嵌入式应用。</li><li>精度问题。通过通信协议调用Api而不是直接调用。(<a href="https://www.zhihu.com/question/509656170/answer/2874462255">https://www.zhihu.com/question/509656170/answer/2874462255</a>)</li><li>性能问题。</li><li>有人说，这是将软件开发成本转移到硬件</li></ul></li></ul><h2 id="WPF">WPF</h2><p>C#</p><h2 id="Qt">Qt</h2><ul><li>示例<ul><li>telegram</li><li>WPS</li></ul></li><li>优势<ul><li>自绘引擎，保证跨平台</li></ul></li></ul><h1>Web UI集锦</h1><ul><li><p>打字机效果</p><ul><li>示例 <a href="https://www.aomanhao.top/LoveHeart/">https://www.aomanhao.top/LoveHeart/</a></li><li>库介绍 <a href="https://blog.csdn.net/weixin_59480481/article/details/129205107">https://blog.csdn.net/weixin_59480481/article/details/129205107</a></li></ul></li><li><p>插入bilibili视频</p><ul><li>教程 <a href="https://zhuanlan.zhihu.com/p/149536086">https://zhuanlan.zhihu.com/p/149536086</a></li><li>直接用代码调整高度 <a href="https://blog.csdn.net/weixin_40539125/article/details/89682652">https://blog.csdn.net/weixin_40539125/article/details/89682652</a></li></ul></li><li><p>图片悬浮放大效果</p><ul><li>item-thumb lazy <a href="https://www.phenxso.com/archives/87.html">https://www.phenxso.com/archives/87.html</a></li></ul></li><li><p>基于配置文件/模板文件的修改</p><ul><li>步骤<ul><li>在网页中F12，检查需要修改的元素，获取其class和id</li><li>在themes/hexo-thema-material/layout/_partial/中找到ejs模板文件</li><li>在themes/hexo-thema-material/source/css/style.css中找到.sidebar-overlay</li></ul></li><li>教程 <a href="https://mmddyhc.github.io/2020/10/05/ji-yu-hexo-de-matery-zhu-ti-bo-ke-zeng-jia-shi-pin-bo-fang-qi/">https://mmddyhc.github.io/2020/10/05/ji-yu-hexo-de-matery-zhu-ti-bo-ke-zeng-jia-shi-pin-bo-fang-qi/</a></li></ul></li><li><p>加入Live2D详见Web04</p></li></ul><div class="bilibili"><iframe id="bili-radio" src="//player.bilibili.com/player.html?bvid=BV1pz4y1g7FC&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><script>document.getElementById("bili-radio").style.height = document.getElementById("bili-radio").scrollWidth * 0.6 + "px";</script>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>UI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web02 游戏联机方法汇总</title>
    <link href="/03-05-web/Web02-Multiplay/"/>
    <url>/03-05-web/Web02-Multiplay/</url>
    
    <content type="html"><![CDATA[<h1>游戏联机方法汇总</h1><h2 id="我的世界-Minecraft">我的世界 Minecraft</h2><p>首先确认能 ping 通，详见“Web06-LAN-connection”</p><h3 id="PCL-局域网联机">PCL 局域网联机</h3><p>PCL（Plain Minecraft Launcher）自带联机，但是现在不行了，显示：</p><p>PCL 登入失败: 身份验证目前正在停机维护</p><h3 id="Minecraft-局域网联机">Minecraft 局域网联机</h3><p>联机采用</p><ol><li>下载服务器文件 <a href="https://mcres.net/download/paper">https://mcres.net/download/paper</a></li><li>联网条件下（使用联机工具），撰写 start.bat，初始化。参见：<br><a href="https://www.bilibili.com/read/cv24721921/">https://www.bilibili.com/read/cv24721921/</a></li></ol><p>start.bat内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -Xms1024M -Xmx2048M  -jar server.jar nogui pause<br></code></pre></td></tr></table></figure><p>（2024 年 11 月 22 日补充）由于上述文章被删了，搜索“server paper”找到新文章 <a href="https://www.bilibili.com/opus/737242260508246080">我的世界paper核心开服保姆级教程 - 哔哩哔哩</a></p><h2 id="戴森球计划-Dyson-Sphere-Program">戴森球计划 Dyson Sphere Program</h2><p><a href="https://www.bilibili.com/read/cv11150200/">https://www.bilibili.com/read/cv11150200/</a></p><p>（2024 年 11 月 22 日补充）为防止上述文章以后被删，将方法记录如下：</p><p>步骤</p><ol><li>下载 <a href="https://dsp.thunderstore.io/package/ebkr/r2modman/">r2modman</a></li><li>在 r2modman 中下载安装 mod</li><li>使用联机工具（例如 Radmin_LAN）</li></ol><h2 id="求生之路-Left-4-Dead-2">求生之路 Left 4 Dead 2</h2><blockquote><p>学习版 游戏来源：搜索5217city</p></blockquote><h3 id="局域网联机">局域网联机</h3><p>打开Radmin VPN，进行局域网联机</p><p>创建联机服务器</p><ol><li>点击 完成战役 - 联机模式 - 高级搜索选项 - 创建游戏大厅</li><li>点击 编辑游戏设置 - 服务器类型 - 本地服务器</li><li>选项 - 多人联机 - 禁用喷图 选否。这样按T可以喷漆</li></ol><p>加入服务器</p><ol><li>在首页会显示“1好友正在游戏”点击加入即可</li></ol><p>疑难问题</p><p>如果Radmin连不上，可能是校园网问题，用其他WIFI或手机热点</p><h3 id="Mod安装">Mod安装</h3><ol><li>放mod</li></ol><p>放进 ./left4dead2/addons/<br>直接把VPK和缩略图放进去，不要新建子文件夹workshop再放，否则运行游戏后会清空</p><ol start="2"><li>启用mod</li></ol><p>运行游戏后，会自动生成mod配置文件 ./left4dead2/addonlist.txt，内容如图，用于设置mod是否启用。也可以在游戏中设置</p><p><img src="/img/posts/image-20240926223427939.png" alt=""><br><img src="/img/posts/image-20240926223551130.png" alt=""></p><h3 id="设置语言-改名">设置语言&amp;改名</h3><p>若游戏目录中有steamClient_loader.exe，说明是使用了Steam Emulator（<a href="https://github.com/metrixmedia/SteamEmulator/%EF%BC%89%EF%BC%8C%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A">https://github.com/metrixmedia/SteamEmulator/），设置方法如下：</a><br>在./steam_settings中，添加文件force_language.txt，内容为schinese<br>添加文件force_account_name.txt，内容为自己想要的名字（例如Olive），这样就不再是默认名Noob了</p><blockquote><p>一开始四处搜怎么改名字没搜到，最后通过bing搜索“force_language.txt”，找到了github仓库的某段代码，恰好是Steam Emulator</p><p>Languages:<br>You can include a steam_settings\supported_languages.txt file with a list of languages that the game supports. If the global emu language setting is not in this list of languages the emu will default to the first language in the list.<br>See the steam_settings.EXAMPLE folder for an example.</p></blockquote><p><img src="/img/posts/image-20240926223403027.png" alt=""></p><h3 id="游戏攻略-其他">游戏攻略&amp;其他</h3><p>按键操作<br>F 手电筒<br>E 拾取；救助倒地的人<br>R 换弹<br>Y 聊天<br>` 控制台（需要 选项 - 键盘/鼠标 - 允许使用开发者控制台）<br>T 喷漆</p><p>扔东西<br>扔油桶 角度向上，左键+右键，可以扔得更远</p><p>攻略-感染者介绍<br><a href="https://wiki.biligame.com/l4d/">https://wiki.biligame.com/l4d/</a><br>近战对Tank造成5%伤害，对Witch造成25%伤害</p><p>攻略-武器介绍<br><a href="https://tieba.baidu.com/p/663460306">https://tieba.baidu.com/p/663460306</a></p><p>按键绑定配置文件位置：./left4dead2/cfg/config.cfd</p><h3 id="VR-MOD">VR MOD</h3><p>代码：<a href="https://github.com/sd805/l4d2vr/">https://github.com/sd805/l4d2vr/</a></p><p>视频教程：<a href="https://www.bilibili.com/video/BV1dg41197Fx/">https://www.bilibili.com/video/BV1dg41197Fx/</a></p><p>文字教程：<a href="https://www.bilibili.com/read/cv22363134/">https://www.bilibili.com/read/cv22363134/</a></p><h2 id="联机工具介绍">联机工具介绍</h2><p><a href="https://zhuanlan.zhihu.com/p/601246524">https://zhuanlan.zhihu.com/p/601246524</a></p><h3 id="RADmin-LAN">RADmin_LAN</h3><p>下载安装软件</p><p>使用方法如下：</p><ul><li>创建房间<ul><li>输入房间号和密码</li></ul></li><li>加入房间</li><li>打开游戏<ul><li>主机不用填</li><li>其他玩家填主机的虚拟 IP 地址</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>Minecraft</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HPC05-OpenMP</title>
    <link href="/02-14-hpc/HPC05-OpenMP/"/>
    <url>/02-14-hpc/HPC05-OpenMP/</url>
    
    <content type="html"><![CDATA[<h1>OpenMP简介</h1><h2 id="定义">定义</h2><p>OpenMP是由OpenMP Architecture Review Board牵头提出的，并已被广泛接受，用于共享内存并行系统的多处理器程序设计的一套指导性编译处理方案</p><h2 id="作用">作用</h2><p>通过调用OpenMP库，能够将程序并行化、多线程化。在最简单的情形，甚至可以只加一行指令，就可以将循环内的程序并行化处理。</p><h2 id="缺点">缺点</h2><p>不适合需要复杂的线程间同步和互斥的场合<br>不能在非共享内存系统(如计算机集群)上使用。此时用MPI替代。</p><h1>OpenMP使用方法</h1><h2 id="Visual-Studio">Visual Studio</h2><p>项目-右键-属性，打开项目属性页<br>如图，OpenMP支持选择“是”</p>]]></content>
    
    
    <categories>
      
      <category>HPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenMP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HPC04-cuda</title>
    <link href="/02-14-hpc/HPC04-cuda/"/>
    <url>/02-14-hpc/HPC04-cuda/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>CUDA with cmake</h1><p>2023-11-26<br>尝试用CMake和CUDA联合编程。但是由于目前虚拟机不能用GPU，因此不知道运行效果。<br>如果能够用Visual Studio打开CMake项目，并且设置nvcc为编译器就好了。可惜现在还对CMake不熟练，不知如何设置编译器<br>先暂时用VS+CUDA runtime，跨平台的事情以后再说吧。</p><table><tr><td bgcolor=yellow>background yellow</td></tr></table>]]></content>
    
    
    <categories>
      
      <category>HPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cuda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HPC03-mpi</title>
    <link href="/02-14-hpc/HPC03-mpi/"/>
    <url>/02-14-hpc/HPC03-mpi/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>MPI总结<br><s>之前的文档太散乱了，因此在这里重新整理一下</s></p><h1>MPI</h1><h2 id="MPI简介">MPI简介</h2><h3 id="定义">定义</h3><p>Massage Passing Interface。是消息传递函数库的标准规范</p><h3 id="原理">原理</h3><p>MPI是一种基于消息传递的编程模型，不同进程间通过消息交换数据。<br>1.MPI点对点通信类型<br>2.MPI聚合通信<br>…</p><h3 id="参考资料">参考资料</h3><ul><li>书籍<ul><li>《UNIX环境编程》</li><li>《高性能计算并行编程技术》，都志辉，清华大学出版社</li><li>《MPI并行程序设计实例》，清华大学出版社</li></ul></li><li>网站<ul><li><a href="https://docs.open-mpi.org/en/v5.0.x/index.html">官网</a></li></ul></li></ul><h2 id="MS-MPI环境配置">MS-MPI环境配置</h2><p>步骤(详见<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[在win10的VS 2019中安装 MPI （听不懂看操作就行） C++ 并行计算_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV12V411h7K4/)">[2]</span></a></sup>)</p><ol><li>下载MPI资源，安装至E:\Microsoft SDKs\<ol><li>进入网页<a href="https://learn.microsoft.com/en-us/message-passing-interface/microsoft-mpi">Microsoft MPI</a></li></ol></li><li>配置VS路径(在VS设置中)<ol><li>打开项目属性页-C/C+±常规-附加包含目录-编辑-添加E:\Microsoft SDKs\MPI\Include</li></ol><img src="/02-14-hpc/HPC03-mpi/install-01.png" class="" title="mpi-install"><ol start="2"><li>链接器-常规-附加库目录-编辑-添加E:\Microsoft SDKs\MPI\Lib\x64</li></ol><img src="/02-14-hpc/HPC03-mpi/install-02.png" class="" title="mpi-install"><ol start="3"><li>链接器-输入-附加依赖项-编辑-添加msmpi.lib</li></ol><img src="/02-14-hpc/HPC03-mpi/install-03.png" class="" title="mpi-install"></li></ol><h2 id="Intel-MPI环境配置">Intel MPI环境配置</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://wenku.baidu.com/link?url=BgnOLi2JPMP7W3rV9Ud5_ttSRn71pOjE5B4Iib5Yjoy0lCT93J0fgMr63faNMNaF_BElAUDTotV0MVB8LLj0U9RUK1-XZWQoJx3q2JeKB8_&amp;_wkts_=1681633726745">VS2012下配置MPI - 百度文库</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://www.bilibili.com/video/BV12V411h7K4/">在win10的VS 2019中安装 MPI （听不懂看操作就行） C++ 并行计算_哔哩哔哩_bilibili</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>HPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mpi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HPC02-sbatch</title>
    <link href="/02-14-hpc/HPC02-sbatch/"/>
    <url>/02-14-hpc/HPC02-sbatch/</url>
    
    <content type="html"><![CDATA[<p><a href="https://help.rc.ufl.edu/doc/Sample_SLURM_Scripts">https://help.rc.ufl.edu/doc/Sample_SLURM_Scripts</a></p><p>Memory requests<br>内存与计算速度无关</p>]]></content>
    
    
    <categories>
      
      <category>HPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sbatch</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HPC01-cmake01</title>
    <link href="/02-14-hpc/HPC01-cmake/"/>
    <url>/02-14-hpc/HPC01-cmake/</url>
    
    <content type="html"><![CDATA[<h1>VS 再次打开CMake项目时无法识别</h1><p>尝试清理缓存，然后重新生成</p><ul><li>菜单栏-项目-清理缓存并重新配置</li></ul><h1>cmake文件跨平台，程序计算结果不同</h1><p>我使用Visual Studio创建了一个CMake项目，能成功运行。然而我移植到在Linux上用cmake编译、运行时，程序得到的计算结果却不同。<br>查看log发现，应该是 abs() max()函数定义问题，自己定义abs_() max_() 后，问题解决。</p><p>GPT的回答：</p><ol><li><p>编译器差异：不同的操作系统和编译器可能对代码的处理方式存在差异，特别是在涉及浮点数运算和优化方面。这可能导致在不同平台上得到不同的计算结果。你可以尝试在Linux上使用与Visual Studio中相同的编译器（例如GCC）来编译代码，以确保结果的一致性。</p></li><li><p>依赖项问题：你的项目可能依赖于特定的库或组件，而在Linux上可能缺少这些依赖项或使用了不同的版本。这可能会导致在不同平台上产生不同的结果。确保在Linux上安装和配置了与Visual Studio相同的依赖项版本，并且在CMakeLists.txt文件中正确设置了这些依赖项。</p></li><li><p>CMake配置问题：CMakeLists.txt文件可能在不同平台上有所不同，特别是与编译选项、链接库和宏定义相关的部分。确保在Linux上正确配置了CMakeLists.txt，以便与Visual Studio中的配置保持一致。</p></li><li><p>平台相关行为：某些代码可能依赖于特定平台的行为，而在不同平台上可能表现不同。这可能涉及文件路径、操作系统相关的特性、并发行为等。确保你的代码在移植到Linux时考虑了这些平台相关的差异，并进行了适当的调整。</p></li></ol><p>这是windows前18步文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus">  istep = <span class="hljs-number">0</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.0104167</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">8640</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.005s</span><br>  istep = <span class="hljs-number">1</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.0208333</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">2671.78</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">9.18258</span>e-<span class="hljs-number">07</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.007s</span><br>  istep = <span class="hljs-number">2</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.03125</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">1541.5</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">9.44346</span>e-<span class="hljs-number">07</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.014s</span><br>...<br>  istep = <span class="hljs-number">17</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.1875</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">37.8238</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">9.18957</span>e-<span class="hljs-number">07</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.042s</span><br>  istep = <span class="hljs-number">18</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.197917</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">34.7246</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">8.76593</span>e-<span class="hljs-number">07</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.044s</span><br></code></pre></td></tr></table></figure><p>这是linux文件。它把残差整数化了</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs stylus">  istep = <span class="hljs-number">0</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.0104167</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">8640</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.000465s</span><br>  istep = <span class="hljs-number">1</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.0208333</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">2400</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.000647s</span><br>  istep = <span class="hljs-number">2</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.03125</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">1824</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.002803s</span><br>  istep = <span class="hljs-number">3</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.0416667</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">1536</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.002997s</span><br>...<br>  istep = <span class="hljs-number">17</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.1875</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">96</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.005587s</span><br>  istep = <span class="hljs-number">18</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.197917</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.00577s</span><br>  istep = <span class="hljs-number">18</span><span class="hljs-selector-tag">time</span> = <span class="hljs-number">0.197917</span><br>dvormax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span>dstrmax/<span class="hljs-selector-tag">dt</span> = <span class="hljs-number">0</span><br>calcutate <span class="hljs-selector-tag">time</span>: <span class="hljs-number">0.005823s</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tricks</tag>
      
      <tag>c++</tag>
      
      <tag>cpp</tag>
      
      <tag>cmake</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web01 如何创建个人主页</title>
    <link href="/03-05-web/Web01-How-to-create-a-personal-homepage/"/>
    <url>/03-05-web/Web01-How-to-create-a-personal-homepage/</url>
    
    <content type="html"><![CDATA[<h1>用Hexo创建静态博客网站</h1><h2 id="简介">简介</h2><p>本网站是基于github-page，无需自建服务器<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://www.zhihu.com/question/462149457">[1]</span></a></sup>。</p><ul><li>优点：<ul><li>免费</li></ul></li><li>缺点：<ul><li>无法实现客户端到服务器的数据传输(?没试过)</li><li>网站代码公开</li></ul></li></ul><h2 id="首次创建网站">首次创建网站</h2><p>直接参照<a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial_sequel/">网站1</a>，它详细讲解了创建方法。它是基于hexo创建的，即将md文件转换为html网页。<br>如果想更换hexo主题，可以参照<a href="https://easyhexo.com/2-Theme-use-and-config/">网站2</a><br>Markdown语法参见<a href="https://docs.github.com/en/get-started/writing-on-github">GitHub官方文档</a>，或者<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a>。Typora用起来是真香，和word一样可见即所得。</p><p>需要注意的内容</p><ol><li>hexo初始化需要保证是空目录，否则报错</li><li>发现&quot; <a href="https://olivetien.github.io/">https://olivetien.github.io/</a> &quot;显示404。原因根目录没有index.html。应该将public文件夹推送上去，而不是将整个项目目录推送上去</li><li>我打算直接将源码推送到github.io项目，在外面新建一个重定向的index.html，但是不行，邮件提示报错。因此改回原来的双respectory方式</li></ol><h2 id="修改网站内容">修改网站内容</h2><h3 id="基本步骤">基本步骤</h3><ol><li>用vscode打开本地源码目录，修改内容<ul><li>用<code>hexo new post &quot;(new_post_title)&quot;</code>新建一篇文档</li></ul></li><li>根目录打开终端<ul><li>输入“hexo s”，启动服务器。此时可以实时修改并查看效果</li><li>输入“hexo clean”清理之前生成的内容，输入“hexo g”编译，生成到public</li></ul></li><li>清除目标仓库的原有代码(别把.git和readme给删了)，将public中的代码复制到目标仓库，用github客户端推送两个respectory</li><li>推送完成后，等待2分钟(等网页更新)</li></ol><h3 id="图片">图片</h3><p>插入图片可以用markdown格式，注意别忘记&quot;!&quot;(否则显示为超链接)</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">![img](<span class="hljs-keyword">https</span>://olivetien.github.io/<span class="hljs-number">2023</span>/<span class="hljs-number">11</span>/<span class="hljs-number">23</span>/How-<span class="hljs-built_in">to</span>-<span class="hljs-built_in">create</span>-<span class="hljs-keyword">a</span>-personal-homepage/img.png)<br></code></pre></td></tr></table></figure><p>也可以用hexo格式</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">&#123;<span class="hljs-symbol">%</span> asset_img img.png This <span class="hljs-built_in">is</span> an <span class="hljs-built_in">example</span> <span class="hljs-built_in">image</span> <span class="hljs-symbol">%</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="封面图">封面图</h3><p>封面图（thumbnail）直接放在博客同名文件夹，命名为thumbnail.jpg即可</p><p>如果thumbnail不显示，首先应检查是否在_config.yml中设置post_asset_folder为true，此外检查路径是否输入正确</p><h2 id="高级玩法">高级玩法</h2><h3 id="添加自定义文件">添加自定义文件</h3><p>在<code>./source/</code>中添加文件夹和文件即可。注意如果添加的是空文件夹，编译时会自动删除，因为用不到。</p><p>你也可以添加进主题的<code>source</code>文件夹中。</p><h3 id="添加自定义html页面并防止被hexo渲染">添加自定义html页面并防止被hexo渲染</h3><p>理论上，可以在source文件夹中放任何文件，它会映射到对应目录。但如果是md或html文件，会被hexo处理导致无法正常显示。如何避免被hexo渲染：</p><p>法一：<br>编辑hexo配置文件_config.yml，在skip_render位置添加属性：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">skip_render</span><span class="hljs-punctuation">: </span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">./HTML/**</span><br>    <span class="hljs-comment"># 表示HTML文件夹里面的所有内容都不会被hexo渲染</span><br></code></pre></td></tr></table></figure><p>但自己测试发现不起作用</p><p>法二：在每个html前加上</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">layout:</span> <span class="hljs-literal">false</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">解决的。渲染时会自动去掉这些</span><br></code></pre></td></tr></table></figure><h3 id="添加Javascript代码">添加Javascript代码</h3><p>要想在md中添加JS代码，只需要添加html代码即可。以下是一个按钮示例：</p><div id="phaser-catch-the-cat"></div><p><button id="phaser-catch-the-cat-load-button">点击加载游戏</button></p><script>  document.getElementById('phaser-catch-the-cat-load-button').addEventListener('click', function () {    document.getElementById('phaser-catch-the-cat').innerHTML = '<iframe width="100%" height="600" src="https://ganlvtech.github.io/phaser-catch-the-cat/index.html"></iframe>';    this.remove();  });</script><div></div><p>按钮的md源码：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;phaser-catch-the-cat&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;phaser-catch-the-cat-load-button&quot;</span>&gt;</span>点击加载游戏<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span><br><span class="language-xml"><span class="language-handlebars">  document.getElementById(&#x27;phaser-catch-the-cat-load-button&#x27;).addEventListenerclick&#x27;, function () &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">    document.getElementById(&#x27;phaser-catch-the-cat&#x27;).innerHTML = &#x27;<span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">dth</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://ganlvtech.github.io/phaser-catch-the-cat/dex.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span>&#x27;;</span></span><br><span class="language-xml"><span class="language-handlebars">    this.remove();</span></span><br><span class="language-xml"><span class="language-handlebars">  &#125;);</span></span><br><span class="language-xml"><span class="language-handlebars"></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="添加网页计数器">添加网页计数器</h3><p>添加如下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">async</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span>本站总访问量<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>次<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>如果要应用到全局，可以修改<code>themes/hexo-theme-material/layout/layout.ejs</code>的模板文件<br>它统计的实际是该域名下的点击量(例如<code>olivetien.github.io\</code>下所有网页)，因此每点击一篇文章都会导致记录加1</p><p>前面提到模板文件使用ejs格式。ejs是&quot;E&quot; javascript的速写，这里&quot;E&quot;可以理解为easy/elegant等单词。它在html中嵌入脚本，实现批量生成html的功能</p><h3 id="添加评论">添加评论</h3><p>使用gitalk。</p><p>首先需要注册github app，每个评论的人都需要登录该app。注册方法参照如下教程</p><p><a href="https://yuanlichenai.cn/2020/01/16/Gitalk/">Gitalk配置教程 | YuanLiChenAi</a></p><p>然后修改配置文件，参照如下教程。material自带预设，不需要自己写ejs代码，只需修改配置文件即可</p><p><a href="https://easyhexo.com/2-Theme-use-and-config/2-5-hexo-theme-material/#material-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">hexo-theme-material | Easy Hexo 👨‍💻</a></p><p>可是总是出现error not found的问题，参照以下链接，看F12解决</p><p><a href="https://www.zhihu.com/question/564993787">(3 封私信 / 31 条消息) Gitalk 错误码Error: Not Found.？ - 知乎 (zhihu.com)</a></p><p>又出现Error: Validation Failed.</p><p>搜索gitalk，关键信息位于<code>\layout\_widget\comment\gitalk\main.ejs</code>和<code>enter.ejs</code>中。在<code>main.ejs</code>中有如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> gitalk = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gitalk</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">clientID</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_client_id %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">clientSecret</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_client_secret %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">repo</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_repo %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">owner</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_owner %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">admin</span>: [<span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_owner %&gt;&#x27;</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">distractionFreeMode</span>: <span class="hljs-literal">false</span></span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">   gitalk.<span class="hljs-title function_">render</span>(<span class="hljs-string">&#x27;gitalk-container&#x27;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>参照教程<a href="https://blog.csdn.net/Keith_Prime/article/details/111604291">Gitalk Error: Validation Failed._gitalk正则报错-CSDN博客</a>的分析，问题的原因是该代码没有配置必要参数id和title，导致生成issue时自动生成了很长的id，超出了新版github对id字符数的限制（50字符）。解决方法是添加这两项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">id: &#x27;Github Page Comment&#x27;<br>title: &#x27;Github Page Comment&#x27;<br></code></pre></td></tr></table></figure><p>虽然能成功评论了，但是所有博客共用评论，这不是我想看到的。于是参照博客<a href="https://www.cnblogs.com/JosonLee/p/10053715.html">不知道的痛 - 博客园</a>，采用md5，根据每个博客的路径（<code>location.pathname</code>），生成唯一的id。代码如下，注意需要导入文件<code>/files/js/md5.min.js</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/files/js/md5.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> gitalk = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Gitalk</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">id</span>: <span class="hljs-title function_">md5</span>(location.<span class="hljs-property">pathname</span>),</span><br><span class="language-javascript">            <span class="hljs-attr">clientID</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_client_id %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">clientSecret</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_client_secret %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">repo</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_repo %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">owner</span>: <span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_owner %&gt;&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">admin</span>: [<span class="hljs-string">&#x27;&lt;%= theme.comment.gitalk_owner %&gt;&#x27;</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">distractionFreeMode</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Github Page Comment&#x27;</span></span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">   gitalk.<span class="hljs-title function_">render</span>(<span class="hljs-string">&#x27;gitalk-container&#x27;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>md5简介：md5是消息摘要算法，任意长度的消息经过处理都会生成相同长度的字符串。MD5的用途有：防止信息被篡改，防止直接看到明文，添加数字签名等</p><p>经过以上操作，每篇文章的issue都是独立的了。但还需要做初始化操作，否则访客看到的页面是“未找到相关的issues进行评论，请联系@OliveTIen初始化创建”。初始化操作为，登自己的账号，把每个博客浏览一遍，这样每个博客首次加载时都会自动初始化issue</p><h3 id="其他">其他</h3><p>添加live2d参见文章Web04</p><p>更多高阶玩法参见Lei Mao的GitHub博客<a href="https://leimao.github.io/blog/Hexo-Blog-Add-JavaScript/">教程</a>，这是他的<a href="https://github.com/ganlvtech/ganlvtech.github.io">GitHubPage仓库(ganlvtech.github.io)</a>，这是他的<a href="https://github.com/ganlvtech/blog">博客源码</a></p><p><a href="http://tanglab.pku.edu.cn/2022/11/24/R&amp;D/2022/GitHub_pages_tutorial/#%E6%B3%A8%E5%86%8C%E4%B8%AA%E4%BA%BAGitHub%E8%B4%A6%E5%8F%B7%EF%BC%8C%E5%9C%A8%E5%85%B6%E4%B8%AD%E5%88%9B%E5%BB%BAGitHub%E4%B8%BB%E9%A1%B5%E5%AF%B9%E5%BA%94%E7%9A%84%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93">how to create personal homepage using Node.js</a></p><p><a href="https://easyhexo.com/2-Theme-use-and-config/2-13-hexo-theme-fluid/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B">how to install fluid theme</a></p><h1>问题</h1><h2 id="hexo无法使用的问题">hexo无法使用的问题</h2><p>有时候很长时间没碰博客了，再次输入hexo命令时，找不到命令(<code>无法将“hexo”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。</code>)<br>进入<code>C:\Users\tgl\AppData\Roaming\npm</code>，输入<code>hexo</code>有效果<br>将该目录添加进系统环境变量<br>进入源码目录，打开Git Bash，输入<code>hexo</code>，出现<code>INFO  Validating config</code>，然后显示版本信息<br>在Git Bash中输入<code>hexo generate</code> <code>hexo clean</code> <code>hexo server</code>，有效果</p><h2 id="找不到博客内容">找不到博客内容</h2><ul><li>为什么leetcode、how-to-clear-usb-history被404了？<ul><li>原来是大小写问题。我将标题首字母改为大写，然后push到github，但是实际上github上这部分代码没有更新(因为目录不区分大小写，而hexo链接跳转时区分大小写)。</li><li>解决措施是将github文件夹删除后push，再添加后重新push。此外也可以通过修改文件名来解决</li></ul></li></ul> <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css">  <script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.zhihu.com/question/462149457">https://www.zhihu.com/question/462149457</a><p><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>写在前面</title>
    <link href="/01-01-welcome/Welcome/"/>
    <url>/01-01-welcome/Welcome/</url>
    
    <content type="html"><![CDATA[<p>这里是风起地。</p><span id="more"></span><blockquote><p>背景图是大连电车</p></blockquote><div>    <!-- 添加live2d，路径位于自己的仓库 -->    <script src="https://fastly.jsdelivr.net/gh/OliveTIen/live2d-widget-web@latest/autoload.js">    </script>    <script>            document.addEventListener('DOMContentLoaded', function() {            var waifuDiv = document.getElementById('waifu');            if (waifuDiv) {                waifuDiv.style.zIndex = '9999';            }        }, 5000);// 5s后执行    </script></div>]]></content>
    
    
    
    <tags>
      
      <tag>life</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
